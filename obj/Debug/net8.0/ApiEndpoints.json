[
  {
    "ContainingType": "FleetIdentityServer.Controllers.Auth",
    "Method": "ChangePasswordOnFirstLogin",
    "RelativePath": "api/Auth/change-password-on-first-login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "FleetIdentityServer.Controllers.ChangePasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FleetIdentityServer.Controllers.Auth",
    "Method": "ForgotPassword",
    "RelativePath": "api/Auth/forgot-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "PersonaXFleet.Models.ForgotPassword",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FleetIdentityServer.Controllers.Auth",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "PersonaXFleet.Models.LoginModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FleetIdentityServer.Controllers.Auth",
    "Method": "GetMechanics",
    "RelativePath": "api/Auth/mechanics",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FleetIdentityServer.Controllers.Auth",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "RegisterModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FleetIdentityServer.Controllers.Auth",
    "Method": "ResetPassword",
    "RelativePath": "api/Auth/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "PersonaXFleet.Models.ResetPassword",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FleetIdentityServer.Controllers.Auth",
    "Method": "GetAllRoles",
    "RelativePath": "api/Auth/roles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FleetIdentityServer.Controllers.Auth",
    "Method": "GetAllUsers",
    "RelativePath": "api/Auth/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FleetIdentityServer.Controllers.Auth",
    "Method": "GetUserById",
    "RelativePath": "api/Auth/users/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FleetIdentityServer.Controllers.Auth",
    "Method": "UpdateUser",
    "RelativePath": "api/Auth/users/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "model",
        "Type": "FleetIdentityServer.Controllers.Auth\u002BUpdateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FleetIdentityServer.Controllers.Auth",
    "Method": "DeleteUser",
    "RelativePath": "api/Auth/users/{userId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FleetIdentityServer.Controllers.Auth",
    "Method": "ToggleUserLock",
    "RelativePath": "api/Auth/users/{userId}/lock",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FleetIdentityServer.Controllers.Auth",
    "Method": "UpdateUserRoles",
    "RelativePath": "api/Auth/users/{userId}/roles",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "PersonaXFleet.DTOs.UpdateRolesDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FleetIdentityServer.Controllers.Auth",
    "Method": "Verify",
    "RelativePath": "api/Auth/verify",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.FuelLogsController",
    "Method": "GetFuelLogs",
    "RelativePath": "api/FuelLogs",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[PersonaXFleet.Models.FuelLog, PersonaXFleet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.FuelLogsController",
    "Method": "GetFuelLog",
    "RelativePath": "api/FuelLogs/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PersonaXFleet.Models.FuelLog",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.FuelLogsController",
    "Method": "PutFuelLog",
    "RelativePath": "api/FuelLogs/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "fuelLogDto",
        "Type": "PersonaXFleet.DTOs.FuelLogDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.FuelLogsController",
    "Method": "DeleteFuelLog",
    "RelativePath": "api/FuelLogs/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.FuelLogsController",
    "Method": "PostFuelLog",
    "RelativePath": "api/FuelLogs/{userId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "fuelLogDto",
        "Type": "PersonaXFleet.DTOs.FuelLogDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PersonaXFleet.Models.FuelLog",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.FuelLogsController",
    "Method": "GetVehicleFuelStats",
    "RelativePath": "api/FuelLogs/stats/{vehicleId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "vehicleId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "startDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "endDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.FuelLogsController",
    "Method": "GetFuelStatsByDateRange",
    "RelativePath": "api/FuelLogs/stats/date-range",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "startDate",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "endDate",
        "Type": "System.DateTime",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.FuelLogsController",
    "Method": "GetMonthlyFuelSummary",
    "RelativePath": "api/FuelLogs/stats/monthly-summary",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.FuelLogsController",
    "Method": "GetUserFuelStatsByDateRange",
    "RelativePath": "api/FuelLogs/stats/user/{userId}/date-range",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "startDate",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "endDate",
        "Type": "System.DateTime",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.FuelLogsController",
    "Method": "GetFuelLogsByUserId",
    "RelativePath": "api/FuelLogs/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[PersonaXFleet.Models.FuelLog, PersonaXFleet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.FuelLogsController",
    "Method": "GetFuelLogsByUserWithDateRange",
    "RelativePath": "api/FuelLogs/user/{userId}/filter",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "startDate",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "endDate",
        "Type": "System.DateTime",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[PersonaXFleet.Models.FuelLog, PersonaXFleet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.FuelLogsController",
    "Method": "GetUserFuelStats",
    "RelativePath": "api/FuelLogs/user/{userId}/stats",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.FuelLogsController",
    "Method": "GetFuelLogsByVehicle",
    "RelativePath": "api/FuelLogs/vehicle/{vehicleId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "vehicleId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetAllMaintenanceRequests",
    "RelativePath": "api/MaintenanceRequest",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "CreateMaintenanceRequest",
    "RelativePath": "api/MaintenanceRequest",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requestDto",
        "Type": "PersonaXFleet.DTOs.CreateMaintenanceRequestDto",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetMaintenanceRequest",
    "RelativePath": "api/MaintenanceRequest/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetAllRequestComments",
    "RelativePath": "api/MaintenanceRequest/{id}/comments",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "CompleteWithInvoice",
    "RelativePath": "api/MaintenanceRequest/{id}/complete-with-invoice",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "data",
        "Type": "PersonaXFleet.Controllers.CompleteWithInvoiceDto",
        "IsRequired": true
      },
      {
        "Name": "user",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetRequestDocuments",
    "RelativePath": "api/MaintenanceRequest/{id}/documents",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "InvalidateCompletedRequest",
    "RelativePath": "api/MaintenanceRequest/{id}/invalidate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "comment",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "ProcessRequestStage",
    "RelativePath": "api/MaintenanceRequest/{id}/process-stage",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "PersonaXFleet.Controllers.ProcessStageDto",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "SubmitProgressUpdate",
    "RelativePath": "api/MaintenanceRequest/{id}/progress-update",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "PersonaXFleet.DTOs.MaintenanceProgressUpdateDto",
        "IsRequired": true
      },
      {
        "Name": "user",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetProgressUpdates",
    "RelativePath": "api/MaintenanceRequest/{id}/progress-updates",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "RejectMaintenanceRequest",
    "RelativePath": "api/MaintenanceRequest/{id}/reject",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "rejectionReason",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "ScheduleMaintenanceRequest",
    "RelativePath": "api/MaintenanceRequest/{id}/schedule",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "scheduleDto",
        "Type": "PersonaXFleet.DTOs.MaintenanceScheduleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "UpdateMaintenanceSchedule",
    "RelativePath": "api/MaintenanceRequest/{id}/schedule",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "scheduleDto",
        "Type": "PersonaXFleet.DTOs.MaintenanceScheduleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "UploadDocument",
    "RelativePath": "api/MaintenanceRequest/{id}/upload-document",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetWorkflowStatus",
    "RelativePath": "api/MaintenanceRequest/{id}/workflow-status",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetActiveRequests",
    "RelativePath": "api/MaintenanceRequest/active-requests",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetApprovedAndRejectedRequests",
    "RelativePath": "api/MaintenanceRequest/approved-rejected",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetApprovedMaintenanceRequests",
    "RelativePath": "api/MaintenanceRequest/approved-requests",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetDocument",
    "RelativePath": "api/MaintenanceRequest/documents/{documentId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "documentId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetMaintenanceHistory",
    "RelativePath": "api/MaintenanceRequest/history",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetMostRecentMaintenanceComments",
    "RelativePath": "api/MaintenanceRequest/latest-comments",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetMyPendingActions",
    "RelativePath": "api/MaintenanceRequest/my-pending-actions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetMyRequests",
    "RelativePath": "api/MaintenanceRequest/my-requests",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "CreatePersonalMaintenanceRequest",
    "RelativePath": "api/MaintenanceRequest/personal",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requestDto",
        "Type": "PersonaXFleet.DTOs.CreatePersonalMaintenanceRequestDto",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetAllProgressUpdates",
    "RelativePath": "api/MaintenanceRequest/progress-updates",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetProgressUpdatesByRequest",
    "RelativePath": "api/MaintenanceRequest/progress-updates/request/{requestId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requestId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetProgressUpdatesByUser",
    "RelativePath": "api/MaintenanceRequest/progress-updates/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetProgressUpdatesByVehicle",
    "RelativePath": "api/MaintenanceRequest/progress-updates/vehicle/{vehicleId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "vehicleId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetMaintenanceSchedule",
    "RelativePath": "api/MaintenanceRequest/scheduled/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetAllMaintenanceSchedules",
    "RelativePath": "api/MaintenanceRequest/schedules",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MaintenanceRequestController",
    "Method": "GetUserSchedules",
    "RelativePath": "api/MaintenanceRequest/user/{userId}/schedules",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.RoutesController",
    "Method": "GetRoutes",
    "RelativePath": "api/Routes",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[PersonaXFleet.DTOs.RouteDto, PersonaXFleet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.RoutesController",
    "Method": "CreateRoute",
    "RelativePath": "api/Routes",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "PersonaXFleet.DTOs.CreateRouteDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PersonaXFleet.DTOs.RouteDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.RoutesController",
    "Method": "GetRoute",
    "RelativePath": "api/Routes/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PersonaXFleet.DTOs.RouteDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.RoutesController",
    "Method": "UpdateRoute",
    "RelativePath": "api/Routes/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "PersonaXFleet.DTOs.CreateRouteDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.RoutesController",
    "Method": "DeleteRoute",
    "RelativePath": "api/Routes/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.RoutesController",
    "Method": "GetDepartments",
    "RelativePath": "api/Routes/departments",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.RoutesController",
    "Method": "GetMyRouteDetails",
    "RelativePath": "api/Routes/my-route-details/{routeId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "routeId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PersonaXFleet.DTOs.UserRouteDetailDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.RoutesController",
    "Method": "GetRoles",
    "RelativePath": "api/Routes/roles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.RoutesController",
    "Method": "GetUserRouteRoles",
    "RelativePath": "api/Routes/user-route-roles/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "GetAllRequestComments",
    "RelativePath": "api/VehicleAssignment/{id}/comments",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "RejectVehicleRequest",
    "RelativePath": "api/VehicleAssignment/{id}/reject",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "rejectionReason",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "GetAllAssignments",
    "RelativePath": "api/VehicleAssignment/AllAssignments",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "GetAllRequests",
    "RelativePath": "api/VehicleAssignment/AllRequests",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "GetApprovedRequests",
    "RelativePath": "api/VehicleAssignment/ApprovedRequests",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "AssignVehicleDirectly",
    "RelativePath": "api/VehicleAssignment/assign",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "PersonaXFleet.Controllers.DirectAssignmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "GetAssignmentHistory",
    "RelativePath": "api/VehicleAssignment/AssignmentHistory/{vehicleId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "vehicleId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "GetVehiclesByUser",
    "RelativePath": "api/VehicleAssignment/ByUser/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "GetUserByVehicle",
    "RelativePath": "api/VehicleAssignment/ByVehicle/{vehicleId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "vehicleId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "GetMostRecentCommentsForAllRequests",
    "RelativePath": "api/VehicleAssignment/latest-comments",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "GetMyPendingVehicleActions",
    "RelativePath": "api/VehicleAssignment/my-pending-actions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "GetMyVehicleRequests",
    "RelativePath": "api/VehicleAssignment/MyVehicleRequests/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "GetRecentAssignments",
    "RelativePath": "api/VehicleAssignment/RecentAssignments",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "GetRequestsBeforeApproval",
    "RelativePath": "api/VehicleAssignment/RequestsBeforeApproval",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "RequestVehicle",
    "RelativePath": "api/VehicleAssignment/RequestVehicle",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "PersonaXFleet.DTOs.VehicleRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "UnassignVehicle",
    "RelativePath": "api/VehicleAssignment/Unassign",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "vehicleId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "GetUserRequests",
    "RelativePath": "api/VehicleAssignment/UserRequests/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "GetAllVehicleRequestComments",
    "RelativePath": "api/VehicleAssignment/vehicle-requests/{id}/comments",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "ProcessVehicleRequestStage",
    "RelativePath": "api/VehicleAssignment/vehicle-requests/{id}/process-stage",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "PersonaXFleet.Controllers.ProcessStageDto",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehicleAssignmentController",
    "Method": "GetVehicleWorkflowStatus",
    "RelativePath": "api/VehicleAssignment/vehicle-requests/{id}/workflow-status",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehiclesController",
    "Method": "GetVehicles",
    "RelativePath": "api/Vehicles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[PersonaXFleet.DTOs.VehicleDto, PersonaXFleet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehiclesController",
    "Method": "PostVehicle",
    "RelativePath": "api/Vehicles",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "vehicleDto",
        "Type": "PersonaXFleet.DTOs.VehicleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PersonaXFleet.DTOs.VehicleDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehiclesController",
    "Method": "GetVehicle",
    "RelativePath": "api/Vehicles/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PersonaXFleet.DTOs.VehicleDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehiclesController",
    "Method": "PutVehicle",
    "RelativePath": "api/Vehicles/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "vehicleDto",
        "Type": "PersonaXFleet.DTOs.VehicleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehiclesController",
    "Method": "DeleteVehicle",
    "RelativePath": "api/Vehicles/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehiclesController",
    "Method": "GetAvailableVehicles",
    "RelativePath": "api/Vehicles/Available",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.VehiclesController",
    "Method": "CheckVehicleAssignment",
    "RelativePath": "api/Vehicles/CheckAssignment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "PersonaXFleet.DTOs.CheckAssignmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MailController",
    "Method": "SendEmail",
    "RelativePath": "Mail/send",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "message",
        "Type": "PersonaXFleet.Models.EmailMessage",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.MailController",
    "Method": "SendTest",
    "RelativePath": "Mail/test",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PersonaXFleet.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[PersonaXFleet.WeatherForecast, PersonaXFleet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]